/*
 * Eden AI API Documentation
 * <a href=\"https://app.edenai.run/user/login\" target=\"_blank\"><img src=\"/static/images/welcome.png\"></a>. # Welcome  Eden AI simplifies the use and integration of AI technologies by providing a unique API connected to the best AI engines and combined with a powerful management platform. The platform covers a wide range of AI technologies: * Vision:  <a href=\"https://www.edenai.co/vision\" target=\"_blank\">www.edenai.co/vision</a>. * Text & NLP: <a href=\"https://www.edenai.co/text\" target=\"_blank\">www.edenai.co/text</a>. * Speech & Audio: <a href=\"https://www.edenai.co/speech\" target=\"_blank\">www.edenai.co/speech</a>. * OCR: <a href=\"https://www.edenai.co/ocr\" target=\"_blank\">www.edenai.co/ocr</a>. * Machine Translation: <a href=\"https://www.edenai.co/translation\" target=\"_blank\">www.edenai.co/translation</a>. * Prediction: <a href=\"https://www.edenai.co/prediction\" target=\"_blank\">www.edenai.co/prediction</a>.  For all the proposed technologies, we provide a single endpoint:  the service provider is only a parameter that can be changed very easily. All the engines available on Eden AI are listed here: www.edenai.co/catalog  # Support & community  ### 1- Support If you have any problems, please contact us at this email address: contact@edenai.co. We will be happy to help you in the use of Eden AI.   ### 2- Community  You can interact personally with other people actively using and working with Eden AI and join our  <a href=\"https://join.slack.com/t/edenai/shared_invite/zt-t68c2pr9-4lDKQ_qEqmLiWNptQzB_6w\" target=\"_blank\">Slack community</a>.  We are always updating our docs, so a good way to always stay up to date is to watch our documentation repo on Github: <a href=\"https://github.com/edenai\" target=\"_blank\">https://github.com/edenai</a>.  ### 3- Blog  We also regularly publish various articles with Eden AI news and technical articles on the different AI engines that exist. You can find these articles here: <a href=\"https://www.edenai.co/blog\" target=\"_blank\">https://www.edenai.co/blog</a>.   # Authentication  ## Create account ![Register](/static/images/register.png)  To create an account, please go to this link: <a href=\"https://app.edenai.run/user/login\" target=\"_blank\">app.edenai.run/user/login</a>. You can create an account with your email address or by using your account on available platforms (Gmail, Github, etc.).   By creating an account with your email address, you will receive a confirmation email with a link to click. Check your spam if needed and contact us if you have any problem: contact@edenai.co  ![Login](/static/images/login.png) ## API key  By going to your account page on the platform: <a href=\"https://app.edenai.run/admin/account\" target=\"_blank\">https://app.edenai.run/admin/account</a>, you will have access to your API key to start using the different AI engines offered by Eden AI.   ![api_key](/static/images/api_key.png)  ## Sandbox API key  By going to your account page on the platform: <a href=\"https://app.edenai.run/admin/account\" target=\"_blank\">https://app.edenai.run/admin/account</a>, you will also have access to your **Sandbox** API key that will allow you to make free calls and get dummy responses in order to implement and debug Eden AI without consuming credits.   ![api_key](/static/images/sandbox_api_key.png)  # Portal Guide  Eden AI provides a web portal that allows you to do several tasks:  ![portal](/static/images/portal.png)  ### 1- Benchmark and test The platform allows you to easily compare competing engines without having to code. By uploading your data, you have access to the prediction results of the different engines. This gives you a first overview of the performance of AI engines.   ![benchmark](/static/images/benchmark.png)  ### 2- Cost management The <a href=\"https://app.edenai.run/admin/cost-management\" target=\"_blank\">cost management page</a> also allows you to centralize the costs associated with the different engines with various filters to simplify the analysis.   This page also allows you to define monthly budget limits not to be exceeded to secure the use of different AI engines.   ![cost-management](/static/images/cost_management.png) ### 3- Account The <a href=\"https://app.edenai.run/admin/account\" target=\"_blank\">account page</a> allows you to change your information and password. It also gives you access to your API key that you can renew if needed.   This page also allows you to add a credit card and to buy with credits to use all the engines offered by Eden AI.   ![account](/static/images/account.png)   # API Guide  Eden AI API has different endpoints that refer to different AI services. The connected providers are thus parameters that the user can easily change. 
 *
 * OpenAPI spec version: v1
 * Contact: contact@edenai.co
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import java.io.File;

import edenai.ApiClient;
import edenai.Configuration;
import edenai.auth.ApiKeyAuth;
import io.swagger.client.model.InlineResponse2001;
import io.swagger.client.model.InlineResponse2002;
import io.swagger.client.model.InlineResponse201;
import io.swagger.client.model.InlineResponse2011;
import org.junit.Before;
import org.junit.Test;
import org.junit.Ignore;


import java.net.SocketTimeoutException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.junit.Assert.assertNotNull;

/**
 * API tests for SpeechApi
 */

public class SpeechApiTest {

    private final SpeechApi api = new SpeechApi();
    private final ApiClient defaultClient = Configuration.getDefaultApiClient();

    @Before
    public void init() {

        ApiKeyAuth Bearer = (ApiKeyAuth) defaultClient.getAuthentication("Bearer");
        Bearer.setApiKey("");
        Bearer.setApiKeyPrefix("Bearer");
    }

    
    /**
     * 
     *
     * Speech recognition is technology that can recognize spoken words, which can then be converted to text. This endpoint allows you to launch asynchronous speech recognition jobs.  **SUPPORTED LANGUAGE**  |Name|Type|Value| |----|----|-----| |**English (US)**|&#x60;string&#x60;|&#x60;en-US&#x60;| |**English (GB)**|&#x60;string&#x60;|&#x60;en-GB&#x60;| |**French**|&#x60;string&#x60;|&#x60;fr-FR&#x60;| |**Spanish**|&#x60;string&#x60;|&#x60;es-ES&#x60;| |**Dutch (Netherlands)**|&#x60;string&#x60;|&#x60;nl-NL&#x60;| |**Japanese**|&#x60;string&#x60;|&#x60;ja-JP&#x60;| |**Russian**|&#x60;string&#x60;|&#x60;ru-RU&#x60;| |**Arabic**|&#x60;string&#x60;|&#x60;ar-SA&#x60;| |**Italian**|&#x60;string&#x60;|&#x60;it-IT&#x60;| |**Korean**|&#x60;string&#x60;|&#x60;ko-KR&#x60;| |**Portuguese**|&#x60;string&#x60;|&#x60;pt-PT&#x60;| |**Turkish**|&#x60;string&#x60;|&#x60;tr-TR&#x60;| |**Indonesian**|&#x60;string&#x60;|&#x60;id-ID&#x60;| |**Malay**|&#x60;string&#x60;|&#x60;ms-MY&#x60;|  **AVAILABLE PROVIDERS**   |Name|Value|Version| |----|-----|-------| |**Amazon Web Services**|&#x60;amazon&#x60;| &#x60;boto3 (v1.15.18)&#x60;  |**Speechmatics**|&#x60;speechmatics&#x60;| &#x60;2.7.0&#x60; 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void asyncSpeechToTextTest() throws Exception {
        String language = "fr-FR";
        File files = new File("/home/michel/Downloads/ttsMP3.com_VoiceText_2022-3-22_10_44_57.mp3");
        String providers = "['amazon']";
        String webhookReceiver = null;
        String usersWebhookParameters = null;
        String vocab = null;
        InlineResponse2001 response = api.asyncSpeechToText(language, files, providers, webhookReceiver, usersWebhookParameters, vocab);
        assertNotNull(response);
        assertNotNull(response.getResult().getJobId());
        assertNotNull(response.getResult().getStatus());

        // TODO: test validations
    }
    
    /**
     * 
     *
     * This endpoint allows you to check the state of  your asynchronous speech recognition job and returns the results if they are ready.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void asyncSpeechToTextJobidTest() throws Exception {
        String jobId = "901ea45a-6cb1-11ec-a47d-0242ac120002";
//        InlineResponse2002 response = api.asyncSpeechToTextJobid(jobId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Speech recognition is technology that can recognize spoken words, which can then be converted to text.  **SUPPORTED LANGUAGE**  |Name|Type|Value| |----|----|-----| |**English (US)**|&#x60;string&#x60;|&#x60;en-US&#x60;| |**English (GB)**|&#x60;string&#x60;|&#x60;en-GB&#x60;| |**French**|&#x60;string&#x60;|&#x60;fr-FR&#x60;| |**Spanish**|&#x60;string&#x60;|&#x60;es-ES&#x60;| |**Dutch (Netherlands)**|&#x60;string&#x60;|&#x60;nl-NL&#x60;| |**Japanese**|&#x60;string&#x60;|&#x60;ja-JP&#x60;| |**Russian**|&#x60;string&#x60;|&#x60;ru-RU&#x60;| |**Arabic**|&#x60;string&#x60;|&#x60;ar-SA&#x60;| |**Italian**|&#x60;string&#x60;|&#x60;it-IT&#x60;| |**Korean**|&#x60;string&#x60;|&#x60;ko-KR&#x60;| |**Portuguese**|&#x60;string&#x60;|&#x60;pt-PT&#x60;| |**Turkish**|&#x60;string&#x60;|&#x60;tr-TR&#x60;| |**Indonesian**|&#x60;string&#x60;|&#x60;id-ID&#x60;| |**Malay**|&#x60;string&#x60;|&#x60;ms-MY&#x60;|  **AVAILABLE PROVIDERS**   |Name|Value|Version| |----|-----|-------| |**Microsoft Azure**|&#x60;microsoft&#x60;| &#x60;v1.0&#x60;  |**Amazon Web Services**|&#x60;amazon&#x60;| &#x60;boto3 (v1.15.18)&#x60;  |**Google Cloud**|&#x60;google&#x60;| &#x60;v1p1beta1&#x60;  |**Deepgram**|&#x60;deepgram&#x60;| &#x60;v1&#x60;  |**RevAi**|&#x60;revai&#x60;| &#x60;v1&#x60; 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void speechToTextTest() throws Exception {
        String language = "fr-FR";
        File files = new File("/home/michel/Downloads/ttsMP3.com_VoiceText_2022-3-22_10_44_57.mp3");
        String providers = "['amazon']";
        String vocab = null;
        defaultClient.setReadTimeout(100000);
        InlineResponse201 response = api.speechToText(language, files, providers, vocab);
        assertNotNull(response);
//        assertNotNull(response.getResult().get(0).getResult().getConfidence());
        assertNotNull(response.getResult().get(0).getResult().getTranscribe());

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Text-to-speech (TTS) system converts normal language text into speech.  **SUPPORTED LANGUAGE**  |Name|Type|Value| |----|----|-----| |**Arabic**|&#x60;string&#x60;|&#x60;ar-XA&#x60;| |**Chinese**|&#x60;string&#x60;|&#x60;cmn-CN&#x60;| |**Danish**|&#x60;string&#x60;|&#x60;da-DK&#x60;| |**Dutch**|&#x60;string&#x60;|&#x60;nl-NL&#x60;| |**English (US)**|&#x60;string&#x60;|&#x60;en-US&#x60;| |**English (UK)**|&#x60;string&#x60;|&#x60;en-GB&#x60;| |**German**|&#x60;string&#x60;|&#x60;de-DE&#x60;| |**Italy**|&#x60;string&#x60;|&#x60;it-IT&#x60;| |**Japanese**|&#x60;string&#x60;|&#x60;ja-JP&#x60;| |**Portuguese (Brazil)**|&#x60;string&#x60;|&#x60;pt-BR&#x60;| |**Portuguese (Portugal)**|&#x60;string&#x60;|&#x60;pt-PT&#x60;| |**Russian**|&#x60;string&#x60;|&#x60;ru-RU&#x60;| |**Spanish**|&#x60;string&#x60;|&#x60;es-ES&#x60;|  **AVAILABLE PROVIDERS**   |Name|Value|Version| |----|-----|-------| |**Microsoft Azure**|&#x60;microsoft&#x60;| &#x60;v1.0&#x60;  |**Amazon Web Services**|&#x60;amazon&#x60;| &#x60;boto3 (v1.15.18)&#x60;  |**Google Cloud**|&#x60;google&#x60;| &#x60;v1&#x60; 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void textToSpeechTest() throws Exception {
        String text = "ceci est un texte";
        String language = "fr-FR";
        String option = "MALE";
        String providers = "['amazon']";
//        InlineResponse2011 response = api.textToSpeech(text, language, option, providers);
//        assertNotNull(response);
//        assertNotNull(response.getResult().get(0).getResult().getText());
//        assertNotNull(response.getResult().get(0).getResult().getAudioPath());
//        assertNotNull(response.getResult().get(0).getResult().getVoiceType());
        // TODO: test validations
    }
    
}
